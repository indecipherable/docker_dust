#!/bin/bash
for i in mediawiki redmine nginx mysql httpd certbot/dns-digitalocean certbot/certbot; do
  #result=$(sudo docker images | grep $i 2>&1 /dev/null);
  result=$(sudo docker images | grep $i)
  echo "DEBUG: result is: $result"
done

a_yml=./docker-compose.yml
# this zeros a_yml
:> $a_yml

# parameterize images as array
image_array=$(sudo docker images | sed -n '2,$p' | grep -v -i "none" | awk '{print $1}' | sed s'/\///' | while read adock; do echo $adock && if [[ $adock = *sql* ]]; then echo $adock-data && echo $adock-mediawiki && echo $adock-redmine && echo $adock-linuxselftest; else :; fi; done)
#image_dir_array=$(for i in $image_array; do echo $
#sudo docker images | sed -n '2,$p' | awk '{print $1}' | sed s'/\///' | while read adock; do echo $adock; done
i=0
for image in $image_array; do
  if [ -f ./$image/Dockerfile-this-image ]; then
    :
    #echo "Found Dockerfile-this-image for $image"
  else
    echo "Creating Dockerfile-this-image for $image"
    :> ./$image/Dockerfile-this-image
  fi
  effortlevel=$(wc ./$image/Dockerfile-this-image -c)
  echo "effortlevel is: $effortlevel"
  i=$((i+1))  
  #echo $image
done

echo

# this can only be instantiated with # of images
image_dir_array=($(seq 1 $i))


echo "version: \"3\"" >> $a_yml
echo "services:" >> $a_yml

### Filetree
i=0
for image in $image_array; do
  image_dir_array[$i]="$(echo $image | sed 's/\///')"
  #echo "DEBUG: ${image_dir_array[$i]}"
  mkdir ${image_dir_array[$i]} 2> /dev/null
  #touch ./${image_dir_array[$i]}/docker-compose.yml
  if [[ $image = *mysql* ]]; then
    echo "  mysql:" >> $a_yml
    echo "    image: mysql" >> $a_yml
    echo "    container_name: $image" >> $a_yml
  else
    echo "  $image:" >> $a_yml
  fi
  echo "    build:" >> $a_yml 
  echo "      context: ./"$image"/" >> $a_yml
  echo "      dockerfile: /home/redmage/docker-projects/"$image"/Dockerfile-this-image" >> $a_yml
  echo "    container_name: $image-container" >> $a_yml
  case "$image" in
    *nginx*)
      echo "    ports:" >> $a_yml 
      echo "      - 80:80" >> $a_yml
      ;;
    mysql-redmine)
      echo "    ports:" >> $a_yml 
      echo "      - 3307:3306" >> $a_yml
      #echo "    volumes_from:" >> $a_yml
      #echo "      - mysql-data" >> $a_yml 
      echo "    environment:" >> $a_yml 
      echo "      MYSQL_ROOT_PASSWORD: \"secret\"" >> $a_yml 
      echo "      MYSQL_DATABASE: \"name_db\"" >> $a_yml 
      echo "      MYSQL_USER: \"user\"" >> $a_yml 
      echo "      MYSQL_PASSWORD: \"password\"" >> $a_yml 
      ;;
    mysql-mediawiki)
      echo "    ports:" >> $a_yml 
      echo "      - 3308:3306" >> $a_yml
      #echo "    volumes_from:" >> $a_yml
      #echo "      - mysql-data" >> $a_yml 
      echo "    environment:" >> $a_yml 
      echo "      MYSQL_ROOT_PASSWORD: \"secret\"" >> $a_yml 
      echo "      MYSQL_DATABASE: \"name_db\"" >> $a_yml 
      echo "      MYSQL_USER: \"user\"" >> $a_yml 
      echo "      MYSQL_PASSWORD: \"password\"" >> $a_yml 
      ;;
    mysql-linuxselftest)
      echo "    ports:" >> $a_yml 
      echo "      - 3309:3306" >> $a_yml
      #echo "    volumes_from:" >> $a_yml
      #echo "      - mysql-data" >> $a_yml 
      echo "    environment:" >> $a_yml 
      echo "      MYSQL_ROOT_PASSWORD: \"secret\"" >> $a_yml 
      echo "      MYSQL_DATABASE: \"name_db\"" >> $a_yml 
      echo "      MYSQL_USER: \"user\"" >> $a_yml 
      echo "      MYSQL_PASSWORD: \"password\"" >> $a_yml 
      ;;
    mysql-data)
      echo "    volumes:" >> $a_yml
      echo "      - /var/lib/mysql/" >> $a_yml
      echo "    command: \"true\"" >> $a_yml
      :
      ;;
    #*maria*)
    #  i
    #  ;;
    *redmine*)
      :
      ;;
    *cert*)
      :
      ;;
    *http*)
      :
      ;;
    *mediawiki*)
      :
      ;;
  esac
  i=$((i+1))  
  #echo ${image_dir_array[$i]}
done

### Run
#for i in mysql; do
#  sudo docker run $i -f ./$i/Dockerfile
#done


#echo ${image_array[*]}
#echo
#echo ${image_dir_array[*]}
